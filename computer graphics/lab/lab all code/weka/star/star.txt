#include <GL/gl.h>
#include <GL/glut.h>
void display(void)
{
/* clear all pixels */
glClear (GL_COLOR_BUFFER_BIT);
/* draw white polygon (rectangle) with corners at
* (0.25, 0.25, 0.0) and (0.75, 0.75, 0.0)
*/
glColor3f (1.0, 0.0, 0.0);
glBegin(GL_POLYGON);
glVertex2d (27, 37);
glVertex2d (30, 30);
glVertex2d (33, 37);
glVertex2d (40, 40);
glVertex2d (33, 43);
glVertex2d (30, 50);
glVertex2d (27, 43);
glVertex2d (20, 40);
glEnd();

glColor3f (0.0, 0.0, 1.0);
glBegin(GL_POLYGON);
glVertex2d (37, 27);
glVertex2d (40, 20);
glVertex2d (43, 27);
glVertex2d (50, 30);
glVertex2d (43, 33);
glVertex2d (40, 40);
glVertex2d (37, 33);
glVertex2d (30, 30);
glEnd();

glColor3f (1.0, 1.0, 1.0);
glBegin(GL_POLYGON);
glVertex2d (53, 37);
glVertex2d (60, 40);
glVertex2d (53, 43);
glVertex2d (50, 50);
glVertex2d (47, 43);
glVertex2d (40, 40);
glVertex2d (47, 37);
glVertex2d (50, 30);
glEnd();

glColor3f (0.0, 1.0, 0.0);
glBegin(GL_POLYGON);
glVertex2d (43, 47);
glVertex2d (50, 50);
glVertex2d (43, 53);
glVertex2d (40, 60);
glVertex2d (37, 53);
glVertex2d (30, 50);
glVertex2d (37, 47);
glVertex2d (40, 40);
glEnd();



/* don't wait!
* start processing buffered OpenGL routines
*/
glFlush ();
}
void init (void)
{
/* select clearing (background) color */
glClearColor (0.0, 0.0, 0.0, 0.0);
/* initialize viewing values */
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0, 80, 0, 80, 0, 80);
}
/*
* Declare initial window size, position, and display mode
* (single buffer and RGBA). Open window with "hello"
* in its title bar. Call initialization routines.
* Register callback function to display graphics.
* Enter main loop and process events.
*/
int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (500, 500);
glutInitWindowPosition (100, 100);
glutCreateWindow ("hello");
init ();
glutDisplayFunc(display);
glutMainLoop();
return 0; /* ISO C requires main to return int. */
}


