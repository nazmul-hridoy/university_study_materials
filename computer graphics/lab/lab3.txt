
#include <GL/gl.h>
#include <GL/glut.h>

int i;
float x1,x2,y1,y2, dx,dy,step,m,x,y;

void display(void)
{
glClear (GL_COLOR_BUFFER_BIT);

dx= x2-x1;
dy=y2-y1;
m=dy/dx;

x=x1;
y=y1;

if(dy<dx){
    step = dx;

}
else
    step=dy;
for(i=0; i<step; i++){
    if(dy<dx){
        x=x+1;
        y=y+(1/m);
    }
    else{
        x=x+m;
        y=y+1;
    }
glColor3f (1.0, 0.25, 1.0);
glBegin(GL_POINTS);
glVertex3f (x, y, 0.0);
glEnd();
}



glFlush ();
}
void init (void)
{
/* select clearing (background) color */
glClearColor (0.0, 0.0, 0.0, 0.0);
/* initialize viewing values */
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0.0, 100.0, 0.0, 100.0, -100.0, 100.0);
}
/*
* Declare initial window size, position, and display mode
* (single buffer and RGBA). Open window with "hello"
* in its title bar. Call initialization routines.
* Register callback function to display graphics.
* Enter main loop and process events.
*/
int main(int argc, char** argv)
{

scanf("%f%f" ,&x1, &y1);
scanf("%f%f" ,&x2, &y2);
glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (500, 500);
glutInitWindowPosition (100, 100);
glutCreateWindow ("hello");
init ();
glutDisplayFunc(display);
glutMainLoop();
return 0; /* ISO C requires main to return int. */
}
